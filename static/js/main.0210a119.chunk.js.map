{"version":3,"sources":["components/ViewBudget.js","components/EditBudget.js","context/AppContext.js","components/Budgets.js","components/Remaining.js","components/ExpenseTotal.js","components/ExpenseItem.js","components/ExpenseList.js","components/AddExpenseForm.js","App.js","index.js"],"names":["ViewBudget","props","budget","type","class","onClick","handleEditClick","EditBudget","useState","value","setValue","required","id","onChange","event","target","handleSaveClick","AppReducer","state","action","expenses","payload","filter","expense","initialState","uuidv4","name","cost","AppContext","createContext","AppProvider","useReducer","dispatch","Provider","children","Budget","useContext","isEditing","setIsEditing","Remaining","totalExpenses","reduce","total","item","alertType","className","ExpenseTotal","ExpenseItem","size","ExpenseList","map","AddExpenseForm","setName","setCost","onSubmit","preventDefault","parseInt","for","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0210a119.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ViewBudget = (props) => {\r\n    return (\r\n        <>\r\n            <span >Budget: ${props.budget}</span>\r\n            <button type='button' class='btn btn-primary' onClick={props.handleEditClick}>\r\n                Edit\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ViewBudget;","import React, { useState } from 'react';\r\n\r\nconst EditBudget = (props) => {\r\n\tconst [value, setValue] = useState(props.budget);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<input\r\n\t\t\t\trequired='required'\r\n\t\t\t\ttype='number'\r\n\t\t\t\tclass='form-control mr-3'\r\n\t\t\t\tid='name'\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={(event) => setValue(event.target.value)}\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\ttype='button'\r\n\t\t\t\tclass='btn btn-primary'\r\n\t\t\t\tonClick={() => props.handleSaveClick(value)}\r\n\t\t\t>\r\n\t\t\t\tSave\r\n\t\t\t</button>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default EditBudget;","import React, { createContext, useReducer } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// 5. The reduceer - this is used to update the state, based on the action\r\nexport const AppReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'ADD_EXPENSE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texpenses: [...state.expenses, action.payload],\r\n\t\t\t};\r\n\t\tcase 'DELETE_EXPENSE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texpenses: state.expenses.filter(\r\n\t\t\t\t\t(expense) => expense.id !== action.payload\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\tcase 'SET_BUDGET':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbudget: action.payload,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n// 1. Sets the initial state when the app loads\r\nconst initialState = {\r\n\tbudget: 2000,\r\n\texpenses: [\r\n\t\t{ id: uuidv4(), name: 'Shopping', cost: 50 },\r\n\t\t{ id: uuidv4(), name: 'Holiday', cost: 300 },\r\n\t\t{ id: uuidv4(), name: 'Transportation', cost: 70 },\r\n\t\t{ id: uuidv4(), name: 'Fuel', cost: 40 },\r\n\t\t{ id: uuidv4(), name: 'Child Care', cost: 500 },\r\n\t],\r\n};\r\n\r\n// 2. Creates the context this is the thing our components import and use to get the state\r\nexport const AppContext = createContext();\r\n\r\n// 3. Provider component - wraps the components we want to give access to the state\r\n// Accepts the children, which are the nested(wrapped) components\r\nexport const AppProvider = (props) => {\r\n\t// 4. Sets up the app state. takes a reducer, and an initial state\r\n\tconst [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n\t// 5. Returns our context. Pass in the values we want to expose\r\n\treturn (\r\n\t\t<AppContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\texpenses: state.expenses,\r\n\t\t\t\tbudget: state.budget,\r\n\t\t\t\tdispatch,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</AppContext.Provider>\r\n\t);\r\n};","import React, { useState, useContext } from 'react';\r\nimport ViewBudget from './ViewBudget';\r\nimport EditBudget from './EditBudget';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nconst Budget = () => {\r\n\tconst { budget, dispatch } = useContext(AppContext);\r\n\tconst [isEditing, setIsEditing] = useState(false);\r\n\r\n\tconst handleEditClick = () => {\r\n\t\tsetIsEditing(true);\r\n\t};\r\n\r\n\tconst handleSaveClick = (value) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_BUDGET',\r\n\t\t\tpayload: value,\r\n\t\t});\r\n\t\tsetIsEditing(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div class='alert alert-secondary p-3 d-flex align-items-center justify-content-between'>\r\n\t\t\t{isEditing ? (\r\n\t\t\t\t<EditBudget handleSaveClick={handleSaveClick} budget={budget} />\r\n\t\t\t) : (\r\n\t\t\t\t// For part 1 render component inline rather than create a seperate one\r\n\t\t\t\t<ViewBudget handleEditClick={handleEditClick} budget={budget} />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Budget;","import React, { useContext } from 'react';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nconst Remaining = () => {\r\n    const { expenses, budget } = useContext(AppContext);\r\n\r\n    const totalExpenses = expenses.reduce((total, item) => {\r\n        return (total = total + item.cost);\r\n    }, 0)\r\n\r\n    const alertType = totalExpenses > budget ? 'alert-danger' : 'alert-success';\r\n\r\n    return (\r\n        <div className={`alert ${alertType}`}>\r\n            <span>Remaining: ${budget - totalExpenses}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Remaining;","import React, { useContext } from 'react';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nconst ExpenseTotal = () => {\r\n    const { expenses } = useContext(AppContext);\r\n\r\n    const totalExpenses = expenses.reduce((total, item) => {\r\n        return (total += item.cost);\r\n    }, 0);\r\n\r\n    return (\r\n        <div className='alert alert-primary'>\r\n            <span>Spent so far: ${totalExpenses}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseTotal;","import React, { useContext } from \"react\";\r\nimport { TiDelete } from \"react-icons/ti\";\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  const { dispatch } = useContext(AppContext);\r\n\r\n  const handleDeleteExpense = () => {\r\n    dispatch({\r\n      type: \"DELETE_EXPENSE\",\r\n      payload: props.id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n      {props.name}\r\n      <div>\r\n        <span className=\"badge badge-primary badge-pill mr-3\">\r\n          ${props.cost}\r\n        </span>\r\n        <TiDelete size=\"1.5em\" onClick={handleDeleteExpense}></TiDelete>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React, { useContext } from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport  { AppContext } from '../context/AppContext';\r\n\r\nconst ExpenseList = () => {\r\n    const { expenses } = useContext(AppContext);\r\n\r\n    return (\r\n        <ul>\r\n            {expenses.map((expense) => (\r\n                <ExpenseItem \r\n                    id={expense.id}\r\n                    name={expense.name}\r\n                    cost={expense.cost} />\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ExpenseList;","import React, { useState, useContext } from \"react\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst AddExpenseForm = () => {\r\n  const { dispatch } = useContext(AppContext);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [cost, setCost] = useState(\"\");\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expense = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      cost: parseInt(cost),\r\n    };\r\n\r\n    dispatch({\r\n      type: \"ADD_EXPENSE\",\r\n      payload: expense,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm col-lg-4\">\r\n          <label for=\"name\">Name</label>\r\n          <input\r\n            required=\"required\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(event) => setName(event.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div className=\"col-sm col-lg-4\">\r\n          <label for=\"cost\">Cost</label>\r\n          <input\r\n            required=\"required\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"cost\"\r\n            value={cost}\r\n            onChange={(event) => setCost(event.target.value)}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col-sm\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddExpenseForm;\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Budget from \"./components/Budgets\";\nimport Remaining from \"./components/Remaining\";\nimport ExpenseTotal from \"./components/ExpenseTotal\";\nimport ExpenseList from \"./components/ExpenseList\";\nimport AddExpenseForm from './components/AddExpenseForm';\nimport { AppProvider } from './context/AppContext';\n\nconst App = () => {\n  return (\n    <AppProvider>\n      <div className=\"container\">\n        <h1 className=\"mt-3\">My Budget Planner</h1>\n        <div className=\"row mt-3\">\n          <div className=\"col-sm\">\n            <Budget />\n          </div>\n          <div className=\"col-sm\">\n            <Remaining />\n          </div>\n          <div className=\"col-sm\">\n            <ExpenseTotal />\n          </div>\n        </div>\n        <h3 className='mt-3'>Expenses</h3>\n        <div className='row mt-3'>\n          <div className='col-sm'>\n            <ExpenseList />\n          </div>\n        </div>\n        \n        <h3 className='mr-3'> Add Expense</h3>\n        <div className='row mt-3'>\n          <div className='col-sm'>\n            <AddExpenseForm />\n          </div>\n        </div>\n      </div>\n    </AppProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}